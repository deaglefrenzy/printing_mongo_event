services:
  mongo1:
    image: mongo:latest
    container_name: mongo1
    restart: always
    command: >
      mongod --replSet ${MONGO_REPLICA_SET}
        --keyFile /etc/mongo-keyfile/mongo-keyfile
        --auth
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./volumes/rs1:/data/db
      - ./conf/mongo/mongo-keyfile:/etc/mongo-keyfile/mongo-keyfile:ro
    networks:
      - lucy
    healthcheck:
      test: ["CMD", "mongosh", "--username", "${MONGO_INITDB_ROOT_USERNAME}", "--password", "${MONGO_INITDB_ROOT_PASSWORD}", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo2:
    image: mongo:latest
    container_name: mongo2
    restart: always
    command: >
      mongod --replSet ${MONGO_REPLICA_SET}
        --keyFile /etc/mongo-keyfile/mongo-keyfile
        --auth
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./volumes/rs2:/data/db
      - ./conf/mongo/mongo-keyfile:/etc/mongo-keyfile/mongo-keyfile:ro
    networks:
      - lucy
    healthcheck:
      test: ["CMD", "mongosh", "--username", "${MONGO_INITDB_ROOT_USERNAME}", "--password", "${MONGO_INITDB_ROOT_PASSWORD}", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo3:
    image: mongo:latest
    container_name: mongo3
    restart: always
    command: >
      mongod --replSet ${MONGO_REPLICA_SET}
        --keyFile /etc/mongo-keyfile/mongo-keyfile
        --auth
    ports:
      - "27019:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./volumes/rs3:/data/db
      - ./conf/mongo/mongo-keyfile:/etc/mongo-keyfile/mongo-keyfile:ro
    networks:
      - lucy
    healthcheck:
      test: ["CMD", "mongosh", "--username", "${MONGO_INITDB_ROOT_USERNAME}", "--password", "${MONGO_INITDB_ROOT_PASSWORD}", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-init:
    image: mongo:latest
    container_name: mongo-init
    restart: "no"
    volumes:
      - ./conf/mongo/setup.sh:/tmp/setup.sh
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_REPLICA_SET=${MONGO_REPLICA_SET}
    entrypoint: [ "sh", "/tmp/setup.sh" ]
    depends_on:
      mongo1:
        condition: service_healthy
      mongo2:
        condition: service_healthy
      mongo3:
        condition: service_healthy
    networks:
      - lucy
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

networks:
  lucy:
    driver: bridge
